<meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
<script charset="UTF-8" type="text/javascript" src="http://ecn.dev.virtualearth.net/mapcontrol/mapcontrol.ashx?v=7.0">
</script>

<script type="text/javascript">
    function GetMap() {
        var map = new Microsoft.Maps.Map(document.getElementById("mapDiv"),
            {
                credentials: "Amp-vKtzFTPqWw1QsJzAH5lW8S89T4maD7gZtjJpKG-uKFLCA0FnPDYkniQmUS2-",
                center: new Microsoft.Maps.Location(41.79, -87.60),
                mapTypeId: Microsoft.Maps.MapTypeId.road,
                zoom: 16
            });

        var loc = new Microsoft.Maps.Location(41.7912, -87.5999);
        var loc2 = new Microsoft.Maps.Location(41.787713, -87.59846);
        var loc3 = new Microsoft.Maps.Location(41.789, -87.601);

        var pin = new Microsoft.Maps.Pushpin(loc);
        var pin2 = new Microsoft.Maps.Pushpin(loc2);
        var pin3 = new Microsoft.Maps.Pushpin(loc3);
        map.entities.push(pin);
        map.entities.push(pin2);
        map.entities.push(pin3);

        pinInfobox = new Microsoft.Maps.Infobox(pin.getLocation(),
                {
                    title: 'The Regenstien Library',
                    description: '1080 E 57th St, Chicago, IL 60637',
                    visible: false,
                    offset: new Microsoft.Maps.Point(0, 15)
                });

        pinInfobox2 = new Microsoft.Maps.Infobox(pin2.getLocation(),
                {
                    title: 'Harper Library',
                    description: '1116 E 59th St, IL 60637',
                    visible: false,
                    offset: new Microsoft.Maps.Point(0, 15)
                });

        pinInfobox3 = new Microsoft.Maps.Infobox(pin3.getLocation(),
                {
                    title: 'Cobb Hall',
                    description: '5907 S Ellis Ave, Chicago, IL 60637',
                    visible: false,
                    offset: new Microsoft.Maps.Point(0, 15)
                });
        // Add handler for the pushpin click event.
        Microsoft.Maps.Events.addHandler(pin, 'click', displayInfobox);

        // Hide the infobox when the map is moved.
        Microsoft.Maps.Events.addHandler(map, 'viewchange', hideInfobox);

        function displayInfobox(e) {
            pinInfobox.setOptions({ visible: true });
        }

        function hideInfobox(e) {
            pinInfobox.setOptions({ visible: false });
        }


        map.entities.push(pinInfobox);
        map.entities.push(pinInfobox2);
        map.entities.push(pinInfobox3);

    }
</script>


@model IEnumerable<WITTracker.Models.Teacher>

@{
    ViewBag.Title = "Index";
}

<h2>Index</h2>
<body onload="GetMap();">
    <div id="mapDiv" class='mapDivStyle'></div>
    <br />
    <hr />
    <br />

    <p>
        @*@Html.ActionLink("Create New", "Create")*@
        @using (Html.BeginForm())
        {
        <p>
            Search Teacher: @Html.TextBox("searchQuery") <br />
            <input type="submit" value="search" class="btn btn-default" />
        </p>
        }
        </p>
        <table class="table">
            <tr>
                <th>
                    @Html.DisplayNameFor(model => model.FirstName)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.LastName)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.Email)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.PreferenceSubject.Name)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.Location.Name)
                </th>
                <th></th>
            </tr>

            @foreach (var item in Model)
            {
                <tr>
                    <td>
                        @Html.DisplayFor(modelItem => item.FirstName)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.LastName)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.Email)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.PreferenceSubject.Name)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.Location.Name)
                    </td>
                    <td>
                        @Html.ActionLink("Edit", "Edit", new { id = item.ID }) |
                        @Html.ActionLink("Details", "Details", new { id = item.ID }) |
                        @Html.ActionLink("Delete", "Delete", new { id = item.ID })
                    </td>
                </tr>
            }

        </table>
    </body>
